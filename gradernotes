1. I wrote this code myself, none of it was copied verbatim or discussed with any classmates.
2. I believe everything works correctly in all of the autograder's test conditions.

Sources: 

=General Guidance=
Dr. John Carroll's CS-570 Lecture Notes (Course Reader)

=dup2=
http://www.cs.loyola.edu/~jglenn/702/S2005/Examples/dup2.html

=/dev/null (un-set stdin)=
https://stackoverflow.com/questions/14846768/in-c-how-do-i-redirect-stdout-fileno-to-dev-null-using-dup2-and-then-redirect

=Where to put the closes for the pipe=
https://stackoverflow.com/questions/40584034/when-and-why-do-i-have-to-close-pipe

=How to write the signal handler=
https://www.thegeekstuff.com/2012/03/catch-signals-sample-c-code/

Special Cases:

'echo hi > |' - This command fails because I check if the next character is a metacharacter - I do not allow metacharacters to be used as filenames.
	- Would not work if | was any metacharacter


Unexpected Behavior:

There hereis (<<) delimiter does not work correctly when using the shell as you might use tcsh or bash. If a person uses the shell, they may not get the desired result from using the hereis delimiter. I believe this has to do with residual lines/characters on stdin after the fork (in the parent). These characters may be clear-able by using getchar() or getline(), but I thought it more important to ensure that it worked with the autograder over working with a human. I chose to left it unfinished out of fear of breaking another (required) portion of the program. Hereis works AS INTENDED when sending input to p2 using tcsh (p2 < file).
